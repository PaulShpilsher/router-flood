name: Benchmarks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-bench-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run benchmarks
      run: cargo bench -- --output-format bencher | tee output.txt
    
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: Rust Benchmark
        tool: 'cargo'
        output-file-path: output.txt
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        # Show alert with commit comment on detecting possible performance regression
        alert-threshold: '110%'
        comment-on-alert: true
        fail-on-alert: false
        alert-comment-cc-users: '@${{ github.repository_owner }}'
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: target/criterion/

  benchmark-compare:
    name: Benchmark Comparison
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Checkout base branch
      run: |
        git fetch origin ${{ github.base_ref }}
        git checkout origin/${{ github.base_ref }}
    
    - name: Run base benchmarks
      run: |
        cargo bench -- --save-baseline base
    
    - name: Checkout PR branch
      run: |
        git checkout ${{ github.head_ref }}
    
    - name: Run PR benchmarks and compare
      run: |
        cargo bench -- --baseline base | tee comparison.txt
    
    - name: Comment PR with results
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const comparison = fs.readFileSync('comparison.txt', 'utf8');
          
          // Extract performance changes
          const regressions = comparison.match(/Performance has regressed/g) || [];
          const improvements = comparison.match(/Performance has improved/g) || [];
          
          let comment = '## Benchmark Results\n\n';
          
          if (regressions.length > 0) {
            comment += `⚠️ **${regressions.length} performance regressions detected**\n\n`;
          }
          
          if (improvements.length > 0) {
            comment += `✅ **${improvements.length} performance improvements detected**\n\n`;
          }
          
          comment += '<details>\n<summary>Full benchmark output</summary>\n\n```\n';
          comment += comparison;
          comment += '\n```\n</details>';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });