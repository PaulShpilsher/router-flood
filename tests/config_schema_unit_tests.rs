//! Unit tests for configuration schema module\n//!\n//! These tests were moved from src/config/schema.rs to maintain\n//! separation between implementation and test code.\n\nuse router_flood::config::schema::{ConfigSchema, ConfigTemplates};\nuse router_flood::config::default_config;\n\n#[test]\nfn test_schema_validation_valid_config() {\n    let config = default_config();\n    let result = ConfigSchema::validate(&config);\n    if let Err(e) = &result {\n        println!(\"Validation error: {:?}\", e);\n    }\n    assert!(result.is_ok());\n}\n\n#[test]\nfn test_all_templates_valid() {\n    for template_name in ConfigTemplates::list_templates() {\n        let template = ConfigTemplates::template(template_name).unwrap();\n        assert!(ConfigSchema::validate(&template).is_ok(), \n            \"Template '{}' should be valid\", template_name);\n    }\n}\n\n#[test]\nfn test_template_serialization() {\n    let template = ConfigTemplates::template(\"basic\").unwrap();\n    let yaml = ConfigTemplates::template_to_yaml(&template);\n    assert!(yaml.is_ok());\n}\n"